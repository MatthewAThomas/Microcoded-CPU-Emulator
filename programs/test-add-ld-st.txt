# lw x2 16(x0)
#    imm = 0000 0001 0000; rs1 = 00000; rd = 00010; funct3 = 010; opcode = 0000011
#    instruction = 000000001000 00000 010 00010 0000011
#                = 0000 0000 1000 0000 0010 0001 0000 0011
#                = 00 80 21 03
03 21 80 00

# lw x3 20(x0)
#    imm = 0000 0001 0100; rs1 = 00000; rd = 00011; funct3 = 010; opcode = 0000011
#    instruction = 0000000010100 00000 010 00011 0000011
#                = 0000 0001 0100 0000 0010 0001 1000 0011
#                = 01 40 21 83
83 21 40 01


# add x4 x2 x3
#    funct7 = 0000000; rs2 = 00011; rs1 = 00010; funct3 = 000; rd = 00100; opcode = 0110011
#    instruction = 0000000 00011 00010 000 00100 0110011
#                = 0000 0000 0011 0001 0000 0010 0011 0011
#                = 00 31 02 33
33 02 31 00

# sw x4 24(x0)
#    imm = 0000 0001 1000; imm[11:5] = 0000000; imm[4:0] = 11000; rs2 = 00100; rs1 = 00000; funct3 = 010; opcode = 0100011
#    instruction = 0000000 00100 00000 010 11000 0100011
#                = 0000 0000 0100 0000 0010 1100 0010 0011
#                = 00 40 2c 23
23 2c 40 00

# Mem[16] == 2
02 00 00 00

# Mem[20] == 3
03 00 00 00

# Mem[24] == 0; should equal 5 after program runs
00 00 00 00